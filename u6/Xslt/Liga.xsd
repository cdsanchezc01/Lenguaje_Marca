<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<!-- Definición GLOBAL de elemento raíz -->
	
    <xs:element name="jornada">
		<!-- ELEMENTO COMPLEJO COMPUESTO -->
		<xs:complexType>
			<!-- DEFINICIÓN DE SECUENCIA DE ELEMENTOS -->
			<xs:sequence>
				<!-- LO DEFINIMOS DE FORMA LOCAL -->
				<xs:element name="numero" type="tipoNumLiga"/>
				<!-- Códigos y partidos los definimos de forma GLOBAL
				por legiilidad del código o posible reutilización -->
				<xs:element ref="codigos"/>
				<xs:element ref="partidos"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<!-- Definición GLOBAL de códigos -->
	<xs:element name="codigos"> <!-- complejo compuesto-->
		<xs:complexType>
			<xs:sequence>
				<!-- Definición LOCAL de código -->
                <!--IDREF depende de codigo  por eso hace referencia si no seria xs:  y el tipo de dato -->
				<xs:element name="codigo" type="xs:IDREF"  
				minOccurs="1" maxOccurs="unbounded"/> <!-- Se tiene en cuenta el tipo de dato para definir su límite-->
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="partidos"> <!-- siempre igual -->
		<xs:complexType>
			<xs:sequence> <!-- casi siempre es secuencia por que sigue orden-->
				<xs:element name="partido" minOccurs="1" 
				maxOccurs="unbounded"> <!-- ten en cuenta los hijos directo *partido*-->
					<xs:complexType> <!-- dentro del complejo compuesto, pero fuera del <xs:sequence> -->
						<xs:sequence>
							<xs:element name="fecha" type="xs:date"/> <!-- simple-->
							<xs:element name="hora" type="xs:time"/>
							<xs:element ref="estadio" minOccurs="0"/> <!-- ref = definir abajo * -->
							<xs:element ref="equipos"/>
							<xs:element ref="acciones"/>
							<xs:element ref="resultado"/>							
						</xs:sequence>
						<xs:attribute name="codigo" type="tipoCodigoP" use="required"/> <!-- por defecto obligatorio-->
						<xs:attribute name="arbitros" type="tipoArbitros" use="required"/> 
                        <!-- normalmento se crea un tipo tipoCodigoP y se define abajo -->
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="estadio"> <!-- ojo *-->
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="miTexto20"> 
					<xs:attribute name="codigo" type="xs:string" use="required"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="equipos"> <!-- Ten en cuenta todo el XML para ver si es secuence-->
		<xs:complexType>
			<xs:sequence>
				<xs:element name="equipo" minOccurs="2" maxOccurs="2"> <!-- en este caso solo puede a ver 2 equipos de futbol ojo-->
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="jugadores"/>
							<xs:choice> <!-- puede estar dentro de un <xs:sequence>, por que los datos no son iguales en el mismo equipo -->
								<xs:element name="entrenador" type="xs:string"/>
								<xs:element name="segundo" type="xs:string"/> <!-- pelotas -->
							</xs:choice>
						</xs:sequence>
						<xs:attribute name="equipo" type="xs:ID" use="required"/>
						<xs:attribute name="tipo" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="jugadores">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jugador"  maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="nombre" type="xs:string" use="required"/>
						<xs:attribute name="dorsal" type="xs:unsignedInt" use="required"/>
						<xs:attribute name="posicion" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="acciones">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="accion" maxOccurs="unbounded">
					<xs:complexType>
						<xs:all> <!-- Sale lo mismo pero desordenado 'clave', puede aperecer de 0,1. Puuede que si este o no -->
							<xs:element name="minuto" type="xs:int"/>
							<xs:element name="equipoA" type="xs:string"/>
							<xs:element name="jugadorA" type="xs:string"/>
						</xs:all>
						<xs:attribute name="tipo" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="resultado">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="finalizacion">
					<xs:complexType>
						<xs:attribute name="fecha" type="xs:date" use="required"/>
						<xs:attribute name="hora" type="tipoHora" use="required"/>
						<xs:attribute name="minuto" type="tipoMin" use="required"/>
					</xs:complexType>
				</xs:element> <!-- Ten en cuenta los hijos para que no esten unos dentro de otros-->
				<xs:element name="golesL" type="xs:int"/>
				<xs:element name="golesV" type="xs:int"/>
				<xs:element name="ganador" type="tipoGanador"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!-- Definimos un tipo que admita un número entero
		o un string-->	
	<xs:simpleType name="tipoNumLiga"> <!-- casi siempre sera xs:simpleType por name="tipoNumLiga"-->
		<xs:union memberTypes="xs:int xs:string"/>
	</xs:simpleType>
	<!-- Definimos un tipo string que tenga mínimo 5
	caracteres y máximo 20 -->
	<xs:simpleType name="miTexto20">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
			<xs:minLength value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tipoHora">
		<xs:restriction base="xs:unsignedInt">
			<xs:minInclusive value="0"/>
			<xs:maxExclusive value="24"/>
			<!-- <xs:maxInclusive value="23"/> -->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tipoMin">
		<xs:restriction base="xs:unsignedInt">
			<xs:minInclusive value="0"/>		
			<xs:maxInclusive value="59"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tipoGanador">
		<xs:restriction base="xs:string">
			<xs:enumeration value="L"/>
			<xs:enumeration value="V"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="l"/>
			<xs:enumeration value="v"/>
			<xs:enumeration value="e"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tipoCodigoP">
		<xs:restriction base="xs:ID"> <!-- <codigo>j01-RM-Barcelona</codigo>-->
			<xs:pattern value="j[0-9]{2}\-[A-Za-z0-9]{2,}\-[A-Za-z0-9]{2,}"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Para definir una lista con restricciones hay
	que definir un tipo para la lista y otro para las
	restricciones tomando como base la lista -->	
	<xs:simpleType name="listaString"> <!-- lista-->
		<xs:list itemType="xs:string"/> <!-- primero creo la lista y luego la restriccion sobre esa lista-->
	</xs:simpleType>
	
	<xs:simpleType name="tipoArbitros">
		<xs:restriction base="listaString">
			<xs:length value="4"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>

<!-- 1º Que tipo es? 
    2º tiene atributos? 
    3º comprobar los hijos y sacar en claro si es </xs:sequence> o algún otro  -->